{"version":3,"sources":["app.js","utils/ajax-service.js","errors/404/error-404-controller.js","js/lists/list-controller.js","js/lists/task.js","js/lists/service/task-service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.factory('ajaxService', ['$log', function($log) {\n\n  return {\n    call: function(p) {\n      return p.then(function (result) {\n        return result.data;\n      })\n      .catch(function (error) {\n        $log.log(error);\n      });\n    }\n  };\n\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.config(['$routeProvider', function($routeProvider){\n  var routeDefinition = {\n    templateUrl: 'static/js/lists/list.html',\n    controller: 'ListCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      tasks: ['tasksService', function(tasksService) {\n          return [];\n          // tasksService.list();\n      }]\n    }\n  };\n\n  $routeProvider.when('/lists', routeDefinition);\n  $routeProvider.when('/', routeDefinition);\n\n}]).controller('ListCtrl', ['tasksService', 'tasks', 'Task', function(tasksService, tasks, Task) {\n  var self = this;\n  self.tasks = tasks;\n  self.newTask = Task();\n\n  self.addTask = function() {\n    tasksService.addTask(self.newTask);\n    self.tasks.push(self.newTask);\n    self.newTask = Task();\n  };\n\n  self.toggleTask = function(task) {\n    tasksService.toggleStatus(task);\n  };\n\n  self.deleteTask = function(task) {\n    tasksService.deleteTask(task);\n    var index = self.tasks.indexOf(task);\n    self.tasks.splice(index, 1);\n  };\n\n}]);\n","app.factory('Task', function() {\n  return function(spec) {\n    spec = spec || {};\n    return {\n      title: spec.title,\n      status: spec.status\n    };\n  };\n});\n","app.factory('tasksService', ['ajaxService', '$http', function(ajaxService, $http) {\n\n  return {\n\n    addTask: function(task, list) {\n      return task;\n    },\n    list: function() {\n      return list;\n    },\n    deleteTask: function(task) {\n      return true;\n    },\n    toggleTask: function(task) {\n      if (task.status === false) {\n        task.status = true;\n      } else {\n        task.status = false;\n      }\n      return task;\n    }\n  };\n\n}]);\n"],"sourceRoot":"/source/"}