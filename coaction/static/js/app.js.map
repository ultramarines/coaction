{"version":3,"sources":["app.js","utils.js/ajax-service.js","utils.js/current-user.js","errors/404/error-404-controller.js","js/lists/task-controller.js","js/lists/task.js","js/nav/login.js","js/nav/main-nav-controller.js","js/lists/service/task-service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["// Declare our app module, and import the ngRoute and ngAnimate\n// modules into it.\nvar app = angular.module('app', ['ngRoute']);\n\n// Set up our 404 handler\napp.config(['$routeProvider', function ($routeProvider) {\n  $routeProvider.otherwise({\n    controller: 'Error404Ctrl',\n    controllerAs: 'vm',\n    templateUrl: 'static/errors/404/error-404.html'\n  });\n}]);\n","app.factory('ajaxService', ['$log', function($log) {\n\n  return {\n    call: function(p) {\n      return p.then(function (result) {\n        return result.data;\n      })\n      .catch(function (error) {\n        $log.log(error);\n      });\n    }\n  };\n\n}]);\n","app.factory('current', ['ajaxService', '$http', '$log', function(ajaxService, $http, $log) {\n  var self = this;\n  self.user = {};\n\n  return self;\n\n  //TODO: make this a thing\n}]);\n","app.controller('Error404Ctrl', ['$location', function ($location) {\n  this.message = 'Could not find: ' + $location.url();\n}]);\n","app.config(['$routeProvider', function($routeProvider){\n  var routeDefinition = {\n    templateUrl: 'static/js/lists/list.html',\n    controller: 'ListCtrl',\n    controllerAs: 'vm',\n    resolve: {\n      tasks: ['tasksService', function(tasksService) {\n          return tasksService.list();\n      }]\n    }\n  };\n\n  $routeProvider.when('/lists', routeDefinition);\n  $routeProvider.when('/', routeDefinition);\n\n}]).controller('ListCtrl', ['tasksService', 'tasks', 'Task', function(tasksService, tasks, Task) {\n  var self = this;\n  self.tasks = tasks;\n  self.newTask = Task();\n\n  self.addTask = function() {\n    var createdTask = tasksService.addTask(self.newTask);\n    if (createdTask.id) {\n      self.tasks.push(createdTask);\n    } else {\n      alert('addition unsuccessful');\n    }\n    self.newTask = Task();\n  };\n\n  self.toggleTask = function(task) {\n    //TODO: make taskService.toggleStatus() a thing, then make this a thing\n    tasksService.toggleStatus(task);\n  };\n\n  self.deleteTask = function(task) {\n    var deletedTask = tasksService.deleteTask(task);\n    if (deletedTask.id) {\n      var index = self.tasks.indexOf(task);\n      self.tasks.splice(index, 1);\n    } else {\n      alert('deletion unsuccessful');\n    }\n  };\n\n}]);\n","app.factory('Task', function() {\n  return function(spec) {\n    spec = spec || {};\n    return {\n      title: spec.title,\n      status: false,\n      assignee: spec.assignee || '',\n    };\n  };\n});\n","app.factory('Login', function() {\n  return function (spec) {\n    spec = spec || {};\n\n    return {\n      username: spec.username,\n      password: spec.password\n    };\n  };\n});\n","app.controller('MainNavCtrl',\n  ['ajaxService', '$http', '$location', '$log', 'current', 'Login', function(ajaxService, $http, $location, $log, current, Login) {\n\n    var self = this;\n\n    self.login = Login();\n\n    self.showLoginForm = false;\n\n    self.showUserMenu = false;\n\n    self.hasUser = false;\n\n    self.userLogin = function(login) {\n      if (login.username && login.password) {\n        self.hasUser = true;\n        self.showLoginForm = false;\n        self.login = Login();\n      } else {\n        alert('you need to enter a username and password, dummy');\n      }\n    }\n\n    self.toggleLoginForm = function() {\n      self.showLoginForm = !self.showLoginForm;\n    }\n\n    self.toggleUserMenu = function() {\n      self.showUserMenu = !self.showUserMenu;\n    }\n\n    self.logout = function() {\n      self.hasUser = false;\n      self.showUserMenu = false;\n    }\n\n    //TODO: create login dropdown\n    //TODO: create current.user dropdown\n\n  }]);\n","app.factory('tasksService', ['ajaxService', '$http', '$log', function(ajaxService, $http, $log) {\n\n  return {\n\n    addTask: function(task) {\n      var addedTask = {};\n      ajaxService.call($http.post('/api/tasks', task)).then(function(result) {\n        addedTask = result.data;\n        return addedTask;\n      }).catch(function(err) {\n        $log.log(err);\n      });\n    },\n    list: function() {\n      return ajaxService.call($http.get('api/tasks'));\n    },\n    deleteTask: function(task) {\n      var url = '/api/tasks/' + task.id;\n      var deletedTask = {};\n      ajaxService.call($http.delete(url)).then(function(result) {\n        deletedTask = result.data;\n        return deletedTask;\n      }).catch(function(err) {\n        $log.log(error);\n      })\n    },\n    toggleTask: function(task) {\n      //TODO: make this a thing\n      // if (task.status === false) {\n      //   task.status = true;\n      // } else {\n      //   task.status = false;\n      // }\n      // return task;\n    }\n  };\n\n}]);\n"],"sourceRoot":"/source/"}